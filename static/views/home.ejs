<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Space Raiders</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap" rel="stylesheet" />
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
  <link rel="stylesheet" href="css/home.css" />
  <link rel="stylesheet" href="css/accessibility.css" /> <!-- Adicionado link para o CSS de acessibilidade -->
</head>

<body>
  <div class="background">
    <div class="accessibility-controls"> <!-- Adicionado contêiner para controles de acessibilidade -->
      <button onclick="changeFontSize(1)">A+</button>
      <button onclick="changeFontSize(-1)">A-</button>
    </div>
    <!-- <div class="login">
    <div class="login-form">
      <label for="login"></label>
      <input id="login" type="text" name="login">
    </div>
    <div class="login-form"></div>
      <label for="password"></label>
      <input id="password" type="password" name="password">
    </div>
    <button (onclick)="login">Login</button>
    </div> -->
    <a href="/">
      <img class="game-logo" src="/assets/images/space-raiders.png" alt="Space Raiders" />
    </a>
    <form class="home-controls" action="/game" method="post">
      <div class="form-container">
        <label class="game-font" for="player-name">ENTER YOUR NAME</label>
        <input id="player-name" type="text" name="player-name" required />
      </div>
      <div class="buttons-container">
        <div class="form-container">
          <label class="game-font" for="player-character">CHOOSE YOUR SPACESHIP</label>
          <div class="spaceship-carousel">
            <button type="button" class="carousel-arrow left" onclick="changeSpaceship(-1)">&#9664;</button>
            <img id="spaceship-image" src="/assets/images/spaceships/spaceship0.png" alt="Espaçonave">
            <button type="button" class="carousel-arrow right" onclick="changeSpaceship(1)">&#9654;</button>
          </div>
          <input type="hidden" id="player-character" name="player-character" value="0">
        </div>

        <div class="start-button">
          <span>
            <img src="/assets/images/play-icon.svg" alt="Start" />
            <button class="game-font btn-start" onclick="playBtnSound()" type="submit">START</button>
          </span>
        </div>
        <div class="rank-button">
          <img src="/assets/images/trophy-icon.svg" alt="Ranking" />
          <a class="game-font btn-ranking" href="/ranking">RANKING</a>
        </div>
      </div>
      <div class="audio-btn-wrapper">
        <button class="audio-btn" type="button" onclick="toggleAudio()">
          <span class="material-symbols-outlined" id="audio-icon">volume_off</span>
        </button>
      </div>
    </form>
  </div>
  <script>
    const pressBtnSound = new Audio('/assets/sound/press-effect.mp3'); // Adiciona o efeito sonoro dos botões
    const backgroundAudio = new Audio('/assets/sound/home-music.mp3');

    let currentSpaceship = 0;
    const lastSpaceship = 9; // Ajuste este número para a quantidade total de espaçonaves

    function changeSpaceship(direction) {
      currentSpaceship += direction;
      if (currentSpaceship > lastSpaceship) currentSpaceship = 0;
      if (currentSpaceship < 0) currentSpaceship = lastSpaceship;

      const spaceshipImage = document.getElementById('spaceship-image');
      spaceshipImage.classList.add('animate'); // Adiciona a classe de animação

      setTimeout(() => {
        spaceshipImage.classList.remove('animate'); // Remove a classe após a animação
      }, 300); // Duração da animação em milissegundos

      document.getElementById('spaceship-image').src = `/assets/images/spaceships/spaceship${currentSpaceship}.png`;
      document.getElementById('player-character').value = currentSpaceship;

      playBtnSound();
    }

    function playBtnSound() {
      pressBtnSound.currentTime = 0;
      pressBtnSound.play();
    }

    function changeFontSize(direction) {
      const html = document.documentElement;
      const currentFontSize = parseFloat(getComputedStyle(html).fontSize); // Obtém o tamanho atual da fonte
      let newFontSize;

      if (direction === 1) {
        newFontSize = currentFontSize + 2; // Aumenta 2px
      } else if (direction === -1) {
        newFontSize = currentFontSize - 2; // Diminui 2px
      }

      html.style.fontSize = `${newFontSize}px`;
      localStorage.setItem('fontSize', newFontSize); // Salva o tamanho da fonte no localStorage
    }

    // Recupera o tamanho da fonte ao carregar a página
    window.onload = function () {
      const savedFontSize = localStorage.getItem('fontSize');
      if (savedFontSize) {
        document.documentElement.style.fontSize = savedFontSize + 'px'; // Define o tamanho da fonte salvo
      }
    };

    let isMuted = true; // Adicionado para controlar o estado do áudio
    backgroundAudio.volume = 0;
    backgroundAudio.loop = true;

    function toggleAudio() {
      const audioIcon = document.getElementById('audio-icon');
      isMuted = !isMuted; // Alterna o estado do áudio

      if (isMuted) {
        audioIcon.textContent = 'volume_off'; // Ícone de mudo
        backgroundAudio.pause();
      } else {
        audioIcon.textContent = 'volume_up'; // Ícone de som
        backgroundAudio.volume = 1;
        backgroundAudio.play();
      }
    }
  </script>
</body>

</html>